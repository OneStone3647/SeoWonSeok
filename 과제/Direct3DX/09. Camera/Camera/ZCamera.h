#ifndef _ZCAMERA_H_
#define _ZCAMERA_H_

#include <d3d9.h>
#include <d3dx9.h>

/*=============================================================================*
 * 카메라 조작 클래스
 *=============================================================================*/
class ZCamera
{
private:
	D3DXVECTOR3		m_vEye;			// 카메라의 현재 위치
	D3DXVECTOR3		m_vLookat;		// 카메라의 시선 위치
	D3DXVECTOR3		m_vUp;			// 카메라의 상방벡터

	D3DXVECTOR3		m_vView;		// 카메라가 향하는 단위방향벡터
	D3DXVECTOR3		m_vCross;		// 카메라의 측면 벡터 cross( view, up )

	D3DXMATRIXA16	m_matView;		// 카메라 행렬
	D3DXMATRIXA16	m_matBill;		// 빌보드 행렬(카메라의 역행렬)
			
public:
	ZCamera();
	~ZCamera();

public:
	// 카메라의 행렬을 얻습니다.
	D3DXMATRIXA16*	GetViewMatrix()
	{
		return &m_matView;
	}

	// 빌보드 행렬을 얻습니다.
	D3DXMATRIXA16*	GetBillMatrix()
	{
		return &m_matBill;
	}

	// 카메라의 위치값을 얻습니다.
	D3DXVECTOR3*	GetEye()
	{
		return &m_vEye;
	}
	// 카메라의 위치값을 설정합니다.
	void			SetEye(D3DXVECTOR3* pv)
	{
		m_vEye = *pv;
	}

	// 카메라의 시선값을 얻습니다.
	D3DXVECTOR3*	GetLookat()
	{
		return &m_vLookat;
	}
	// 카메라의 시선값을 설정합니다.
	void			SetLookat(D3DXVECTOR3* pv)
	{
		m_vLookat = *pv;
	}

	// 카메라의 상방벡터값을 얻습니다.
	D3DXVECTOR3*	GetUp()
	{
		return &m_vUp;
	}
	// 카메라의 상방벡터값을 설정합니다.
	void			SetUp(D3DXVECTOR3* pv)
	{
		m_vUp = *pv;
	}

	// 값을 갱신합니다.
	void			Flush()
	{
		SetView(&m_vEye, &m_vLookat, &m_vUp);
	}

public:
	// 카메라 행렬을 생성하기 위한 기본 벡터값들을 설정합니다.
	D3DXMATRIXA16* SetView(D3DXVECTOR3* pvEye, D3DXVECTOR3* pvLookat, D3DXVECTOR3* pvUp);

	// 카메라 좌표계의 X축으로 angle만큼 회전합니다.
	D3DXMATRIXA16* RotateLocalX(float angle);

	// 카메라 좌표계의 Y축으로 angle만큼 회전합니다.
	D3DXMATRIXA16* RotateLocalY(float angle);

	// 카메라 좌표계의 Z축으로 angle만큼 회전합니다.
	D3DXMATRIXA16* RotateLocalZ(float angle);

	// 월드 좌표계의 *pv값의 위치로 이동합니다.
	D3DXMATRIXA16* MoveTo(D3DXVECTOR3* pv);

	// 카메라 좌표계의 X축 방향으로 dist만큽 전진합니다.(후진은 -dist를 넣으면 됩니다.)
	D3DXMATRIXA16* MoveLocalX(float dist);

	// 카메라 좌표계의 Y축 방향으로 dist만큼 전진합니다.(후진은 -dist를 넣으면 됩니다.)
	D3DXMATRIXA16* MoveLocalY(float dist);

	// 카메라 좌표계의 Z축 방향으로 dist만큼 전진합니다.(후진은 -dist를 넣으면 됩니다.)
	D3DXMATRIXA16* MoveLocalZ(float dist);
};

#endif	// _ZCAMERA_H_

